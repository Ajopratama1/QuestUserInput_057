Index: app/src/main/java/com/example/questuserinput_057/TeksEdit.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.questuserinput_057\r\n\r\nimport androidx.compose.runtime.Composable\r\nimport android.R\r\nimport androidx.compose.foundation.layout.padding\r\nimport androidx.compose.material3.RadioButton\r\nimport androidx.compose.runtime.mutableStateOf\r\nimport androidx.compose.runtime.remember\r\nimport androidx.compose.ui.Modifier\r\n\r\n@composable\r\nfun FormDataDiri(modifier: Modifier\r\n){\r\n    var textNama by remember {mutableStateOf(value=\"\")}\r\n    var textAlamat by remember {mutableStateOf(value=\"\")}\r\n    var textJK by remember {mutableStateOf(value=\"\")}\r\n\r\n    var nama by remember {mutableStateOf(value=\"\")}\r\n    var alamat by remember {mutableStateOf(value=\"\")}\r\n    var jenis by remember {mutableStateOf(value=\"\")}\r\n\r\n    val gender:List<R.string> = listOf(\"Laki-laki\",\"Perempuan\")\r\n\r\n    comlumn(modifier = modifier.padding(top = 50.dp),\r\n        verticalArrangement = Arrangement.Top,\r\n        horizontalAlignment = Alignment.CenterHorizontally {\r\n            OutlinedTextField(\r\n                value = textNama,\r\n                singleLine = true,\r\n                shape = MaterialTheme.shapes.large,\r\n                modifier = Modifier.width(250.dp),\r\n                label = {Text(text = \"Nama Lengkap\")},\r\n                onValueChange = {textNama = it}\r\n            )\r\n            Row {\r\n                gender.forEach { item ->\r\n                    Row(modifier = Modifier.selectable(\r\n                        selected = textJK == item,\r\n                        onClick = {textJK = item}\r\n                    ), verticalAlignment = Alignment.CenterVertically) {\r\n                        RadioButton(\r\n                            selected = textJK == item,\r\n                            onClick = {textJK = item}\r\n                        )\r\n                        Text(text = item)\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/questuserinput_057/TeksEdit.kt b/app/src/main/java/com/example/questuserinput_057/TeksEdit.kt
--- a/app/src/main/java/com/example/questuserinput_057/TeksEdit.kt	(revision 92e537da0d7ee876e65fd8fdd2c7d296313e7e34)
+++ b/app/src/main/java/com/example/questuserinput_057/TeksEdit.kt	(date 1761802654719)
@@ -1,56 +1,129 @@
-package com.example.questuserinput_057
+package com.example.QuestUserInput_057
 
-import androidx.compose.runtime.Composable
-import android.R
+import androidx.compose.foundation.layout.Arrangement
+import androidx.compose.foundation.layout.Column
+import androidx.compose.foundation.layout.Row
+import androidx.compose.foundation.layout.fillMaxWidth
+import androidx.compose.foundation.layout.height
 import androidx.compose.foundation.layout.padding
+import androidx.compose.foundation.layout.width
+import androidx.compose.foundation.selection.selectable
+import androidx.compose.material3.Button
+import androidx.compose.material3.CardDefaults
+import androidx.compose.material3.ElevatedCard
+import androidx.compose.material3.HorizontalDivider
+import androidx.compose.material3.MaterialTheme
+import androidx.compose.material3.OutlinedTextField
 import androidx.compose.material3.RadioButton
+import androidx.compose.material3.Text
+import androidx.compose.runtime.Composable
+import androidx.compose.runtime.getValue
 import androidx.compose.runtime.mutableStateOf
 import androidx.compose.runtime.remember
+import androidx.compose.runtime.setValue
+import androidx.compose.ui.Alignment
 import androidx.compose.ui.Modifier
+import androidx.compose.ui.graphics.Color
+import androidx.compose.ui.res.dimensionResource
+import androidx.compose.ui.unit.dp
+import com.example.questuserinput_057.R
 
-@composable
-fun FormDataDiri(modifier: Modifier
-){
-    var textNama by remember {mutableStateOf(value="")}
-    var textAlamat by remember {mutableStateOf(value="")}
-    var textJK by remember {mutableStateOf(value="")}
+@Composable
+fun FormDataDiri(modifier: Modifier) {
+    var textNama by remember { mutableStateOf( "" )  }
+    var textAlamat by remember { mutableStateOf("") }
+    var textJK by remember { mutableStateOf("") }
 
-    var nama by remember {mutableStateOf(value="")}
-    var alamat by remember {mutableStateOf(value="")}
-    var jenis by remember {mutableStateOf(value="")}
+    var nama by remember { mutableStateOf("") }
+    var alamat by remember { mutableStateOf("") }
+    var jenis by remember { mutableStateOf("") }
 
-    val gender:List<R.string> = listOf("Laki-laki","Perempuan")
+    val gender:List<String> = listOf("Laki-laki", "Perempuan")
 
-    comlumn(modifier = modifier.padding(top = 50.dp),
+    Column(modifier = Modifier.padding(top = 50.dp),
         verticalArrangement = Arrangement.Top,
-        horizontalAlignment = Alignment.CenterHorizontally {
-            OutlinedTextField(
-                value = textNama,
-                singleLine = true,
-                shape = MaterialTheme.shapes.large,
-                modifier = Modifier.width(250.dp),
-                label = {Text(text = "Nama Lengkap")},
-                onValueChange = {textNama = it}
-            )
-            Row {
-                gender.forEach { item ->
-                    Row(modifier = Modifier.selectable(
+        horizontalAlignment = Alignment.CenterHorizontally) {
+        OutlinedTextField(
+            value = textNama,
+            singleLine = true,
+            shape = MaterialTheme.shapes.large,
+            modifier = Modifier.width(250.dp),
+            label = { Text(text = " Nama Lengkap") },
+            onValueChange = {
+                textNama = it
+            }
+        )
+        Row {
+            gender.forEach { item ->
+                Row(
+                    modifier = Modifier.selectable(
                         selected = textJK == item,
-                        onClick = {textJK = item}
+                        onClick = { textJK = item }
                     ), verticalAlignment = Alignment.CenterVertically) {
-                        RadioButton(
-                            selected = textJK == item,
-                            onClick = {textJK = item}
-                        )
-                        Text(text = item)
-                    }
+                    RadioButton(
+                        selected = textJK == item,
+                        onClick = {
+                            textJK = item
+                        })
+                    Text(item)
+                }
+            }
+        }
+        OutlinedTextField(
+            value = textAlamat,
+            singleLine = true,
+            modifier = Modifier.width(250.dp),
+            label = {Text(text = "Alamat Lengkap")},
+            onValueChange = {
+                textAlamat = it
+            }
+        )
+        HorizontalDivider(
+            modifier = Modifier.padding(bottom = dimensionResource(R.dimen.padding_medium),
+                top = dimensionResource(
+                    id = R.dimen.padding_medium)
+            ),
+            thickness = dimensionResource(R.dimen.padding_tipis),
+            color = Color.DarkGray
+        )
+        Button(
+            modifier = Modifier.fillMaxWidth(1f),
+            enabled = textAlamat.isNotEmpty(),
+            onClick = {
+                nama=textNama
+                jenis=textJK
+                alamat=textAlamat
+            }
+        ) {
+            HorizontalDivider(
+                modifier = Modifier.padding(bottom = dimensionResource(R.dimen.padding_medium),
+                    top = dimensionResource(
+                        id = R.dimen.padding_medium)
+                ),
+                thickness = dimensionResource(R.dimen.padding_tipis),
+                color = Color.DarkGray
+            )
 
-                }
-            }
+            ElevatedCard(
+                elevation = CardDefaults.cardElevation(defaultElevation = 10.dp),
+                colors = CardDefaults.cardColors(containerColor = Color.Black),
+                modifier = Modifier
+                    .height(100.dp)
+                    .width(300.dp)
+
 
+            ) {
+                Column (modifier = Modifier.padding(horizontal = 5.dp, vertical = 15.dp),){
+                    Text(text = "Nama : "+nama, color = Color.White)
+                    Text(text = "Gender : "+jenis, color = Color.White)
+                    Text(text = "Alamat : "+alamat, color = Color.White)
 
-        }
+                }
+            }
 
+        }
+    }
+}
 
 
 
